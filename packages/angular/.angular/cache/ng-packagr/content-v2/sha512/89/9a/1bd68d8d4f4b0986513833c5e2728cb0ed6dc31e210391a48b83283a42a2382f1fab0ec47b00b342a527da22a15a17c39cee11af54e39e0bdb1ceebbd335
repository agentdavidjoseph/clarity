{"hash":"f38487ab1c46890dcacd2eead34cb2174fd11d6c","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport '@cds/core/navigation/register.js';\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsNavigationDirective {\n    constructor(elementRef) {\n        this.cdsMotionChange = new EventEmitter();\n        this.element = elementRef.nativeElement;\n    }\n    get expandedRoot() {\n        return this.element.expandedRoot;\n    }\n    set expandedRoot(value) {\n        this.element.expandedRoot = !!value;\n    }\n    get cdsMotion() {\n        return this.element.cdsMotion;\n    }\n    set cdsMotion(value) {\n        this.element.cdsMotion = value;\n    }\n    get expanded() {\n        return this.element.expanded;\n    }\n    set expanded(value) {\n        this.element.expanded = !!value;\n    }\n    get i18n() {\n        return this.element.i18n;\n    }\n    set i18n(value) {\n        this.element.i18n = value;\n    }\n    get role() {\n        return this.element.role;\n    }\n    set role(value) {\n        this.element.role = value;\n    }\n}\nCdsNavigationDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsNavigationDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsNavigationDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: CdsNavigationDirective, selector: \"cds-navigation\", inputs: { expandedRoot: \"expandedRoot\", cdsMotion: \"cdsMotion\", expanded: \"expanded\", i18n: \"i18n\", role: \"role\" }, outputs: { cdsMotionChange: \"cdsMotionChange\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsNavigationDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-navigation' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { expandedRoot: [{\n                type: Input\n            }], cdsMotion: [{\n                type: Input\n            }], expanded: [{\n                type: Input\n            }], i18n: [{\n                type: Input\n            }], role: [{\n                type: Input\n            }], cdsMotionChange: [{\n                type: Output\n            }] } });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsNavigationGroupDirective {\n    constructor(elementRef) {\n        this.cdsMotionChange = new EventEmitter();\n        this.element = elementRef.nativeElement;\n    }\n    get cdsMotion() {\n        return this.element.cdsMotion;\n    }\n    set cdsMotion(value) {\n        this.element.cdsMotion = value;\n    }\n    get i18n() {\n        return this.element.i18n;\n    }\n    set i18n(value) {\n        this.element.i18n = value;\n    }\n    get expanded() {\n        return this.element.expanded;\n    }\n    set expanded(value) {\n        this.element.expanded = !!value;\n    }\n    get active() {\n        return this.element.active;\n    }\n    set active(value) {\n        this.element.active = !!value;\n    }\n    get hasFocus() {\n        return this.element.hasFocus;\n    }\n    set hasFocus(value) {\n        this.element.hasFocus = !!value;\n    }\n}\nCdsNavigationGroupDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsNavigationGroupDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsNavigationGroupDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: CdsNavigationGroupDirective, selector: \"cds-navigation-group\", inputs: { cdsMotion: \"cdsMotion\", i18n: \"i18n\", expanded: \"expanded\", active: \"active\", hasFocus: \"hasFocus\" }, outputs: { cdsMotionChange: \"cdsMotionChange\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsNavigationGroupDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-navigation-group' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { cdsMotion: [{\n                type: Input\n            }], i18n: [{\n                type: Input\n            }], expanded: [{\n                type: Input\n            }], active: [{\n                type: Input\n            }], hasFocus: [{\n                type: Input\n            }], cdsMotionChange: [{\n                type: Output\n            }] } });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsNavigationStartDirective {\n    constructor(elementRef) {\n        this.element = elementRef.nativeElement;\n    }\n    get i18n() {\n        return this.element.i18n;\n    }\n    set i18n(value) {\n        this.element.i18n = value;\n    }\n    get expandedRoot() {\n        return this.element.expandedRoot;\n    }\n    set expandedRoot(value) {\n        this.element.expandedRoot = !!value;\n    }\n    get hasFocus() {\n        return this.element.hasFocus;\n    }\n    set hasFocus(value) {\n        this.element.hasFocus = value;\n    }\n    get isGroupStart() {\n        return this.element.isGroupStart;\n    }\n    set isGroupStart(value) {\n        this.element.isGroupStart = !!value;\n    }\n    get role() {\n        return this.element.role;\n    }\n    set role(value) {\n        this.element.role = value;\n    }\n    get navigationGroupId() {\n        return this.element.navigationGroupId;\n    }\n    set navigationGroupId(value) {\n        this.element.navigationGroupId = value;\n    }\n    get itemText() {\n        return this.element.itemText;\n    }\n    set itemText(value) {\n        this.element.itemText = value;\n    }\n}\nCdsNavigationStartDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsNavigationStartDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsNavigationStartDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: CdsNavigationStartDirective, selector: \"cds-navigation-start\", inputs: { i18n: \"i18n\", expandedRoot: \"expandedRoot\", hasFocus: \"hasFocus\", isGroupStart: \"isGroupStart\", role: \"role\", navigationGroupId: \"navigationGroupId\", itemText: \"itemText\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsNavigationStartDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-navigation-start' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { i18n: [{\n                type: Input\n            }], expandedRoot: [{\n                type: Input\n            }], hasFocus: [{\n                type: Input\n            }], isGroupStart: [{\n                type: Input\n            }], role: [{\n                type: Input\n            }], navigationGroupId: [{\n                type: Input\n            }], itemText: [{\n                type: Input\n            }] } });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsNavigationItemDirective {\n    constructor(elementRef) {\n        this.element = elementRef.nativeElement;\n    }\n    get i18n() {\n        return this.element.i18n;\n    }\n    set i18n(value) {\n        this.element.i18n = value;\n    }\n    get active() {\n        return this.element.active;\n    }\n    set active(value) {\n        this.element.active = !!value;\n    }\n    get disabled() {\n        return this.element.disabled;\n    }\n    set disabled(value) {\n        this.element.disabled = !!value;\n    }\n    get expanded() {\n        return this.element.expanded;\n    }\n    set expanded(value) {\n        this.element.expanded = !!value;\n    }\n    get groupItem() {\n        return this.element.groupItem;\n    }\n    set groupItem(value) {\n        this.element.groupItem = !!value;\n    }\n    get hasFocus() {\n        return this.element.hasFocus;\n    }\n    set hasFocus(value) {\n        this.element.hasFocus = value;\n    }\n    get focusElement() {\n        return this.element.focusElement;\n    }\n    set focusElement(value) {\n        this.element.focusElement = value;\n    }\n    get itemText() {\n        return this.element.itemText;\n    }\n    set itemText(value) {\n        this.element.itemText = value;\n    }\n    get role() {\n        return this.element.role;\n    }\n    set role(value) {\n        this.element.role = value;\n    }\n}\nCdsNavigationItemDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsNavigationItemDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsNavigationItemDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: CdsNavigationItemDirective, selector: \"cds-navigation-item\", inputs: { i18n: \"i18n\", active: \"active\", disabled: \"disabled\", expanded: \"expanded\", groupItem: \"groupItem\", hasFocus: \"hasFocus\", focusElement: \"focusElement\", itemText: \"itemText\", role: \"role\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsNavigationItemDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-navigation-item' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { i18n: [{\n                type: Input\n            }], active: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], expanded: [{\n                type: Input\n            }], groupItem: [{\n                type: Input\n            }], hasFocus: [{\n                type: Input\n            }], focusElement: [{\n                type: Input\n            }], itemText: [{\n                type: Input\n            }], role: [{\n                type: Input\n            }] } });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsNavigationModule {\n}\nCdsNavigationModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsNavigationModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdsNavigationModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsNavigationModule, declarations: [CdsNavigationDirective,\n        CdsNavigationGroupDirective,\n        CdsNavigationStartDirective,\n        CdsNavigationItemDirective], imports: [CommonModule], exports: [CdsNavigationDirective,\n        CdsNavigationGroupDirective,\n        CdsNavigationStartDirective,\n        CdsNavigationItemDirective] });\nCdsNavigationModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsNavigationModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsNavigationModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [\n                        CdsNavigationDirective,\n                        CdsNavigationGroupDirective,\n                        CdsNavigationStartDirective,\n                        CdsNavigationItemDirective,\n                    ],\n                    exports: [\n                        CdsNavigationDirective,\n                        CdsNavigationGroupDirective,\n                        CdsNavigationStartDirective,\n                        CdsNavigationItemDirective,\n                    ],\n                }]\n        }] });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * Public API Surface of cds-angular\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdsNavigationDirective, CdsNavigationGroupDirective, CdsNavigationItemDirective, CdsNavigationModule, CdsNavigationStartDirective };\n","map":{"version":3,"file":"navigation.mjs","sources":["../../../projects/cds-angular/navigation/cds-navigation.directive.ts","../../../projects/cds-angular/navigation/cds-navigation-group.directive.ts","../../../projects/cds-angular/navigation/cds-navigation-start.directive.ts","../../../projects/cds-angular/navigation/cds-navigation-item.directive.ts","../../../projects/cds-angular/navigation/navigation.module.ts","../../../projects/cds-angular/navigation/index.ts","../../../projects/cds-angular/navigation/public-api.ts","../../../projects/cds-angular/navigation/navigation.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Input, Output, EventEmitter } from '@angular/core';\nimport { CdsNavigation } from '@cds/core/navigation';\n\n@Directive({ selector: 'cds-navigation' })\nexport class CdsNavigationDirective {\n  protected element: CdsNavigation;\n\n  get expandedRoot() {\n    return this.element.expandedRoot;\n  }\n  @Input() set expandedRoot(value: boolean | '') {\n    this.element.expandedRoot = !!value;\n  }\n  get cdsMotion() {\n    return this.element.cdsMotion;\n  }\n  @Input() set cdsMotion(value) {\n    this.element.cdsMotion = value;\n  }\n  get expanded() {\n    return this.element.expanded;\n  }\n  @Input() set expanded(value: boolean | '') {\n    this.element.expanded = !!value;\n  }\n  get i18n() {\n    return this.element.i18n;\n  }\n  @Input() set i18n(value) {\n    this.element.i18n = value;\n  }\n  get role() {\n    return this.element.role;\n  }\n  @Input() set role(value) {\n    this.element.role = value;\n  }\n\n  @Output() cdsMotionChange: EventEmitter<CustomEvent> = new EventEmitter();\n\n  constructor(elementRef: ElementRef) {\n    this.element = elementRef.nativeElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Input, Output, EventEmitter } from '@angular/core';\nimport { CdsNavigationGroup } from '@cds/core/navigation';\n\n@Directive({ selector: 'cds-navigation-group' })\nexport class CdsNavigationGroupDirective {\n  protected element: CdsNavigationGroup;\n\n  get cdsMotion() {\n    return this.element.cdsMotion;\n  }\n  @Input() set cdsMotion(value) {\n    this.element.cdsMotion = value;\n  }\n  get i18n() {\n    return this.element.i18n;\n  }\n  @Input() set i18n(value) {\n    this.element.i18n = value;\n  }\n  get expanded() {\n    return this.element.expanded;\n  }\n  @Input() set expanded(value: boolean | '') {\n    this.element.expanded = !!value;\n  }\n  get active() {\n    return this.element.active;\n  }\n  @Input() set active(value: boolean | '') {\n    this.element.active = !!value;\n  }\n  get hasFocus() {\n    return this.element.hasFocus;\n  }\n  @Input() set hasFocus(value: boolean | '') {\n    this.element.hasFocus = !!value;\n  }\n\n  @Output() cdsMotionChange: EventEmitter<CustomEvent> = new EventEmitter();\n\n  constructor(elementRef: ElementRef) {\n    this.element = elementRef.nativeElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { CdsNavigationStart } from '@cds/core/navigation';\n\n@Directive({ selector: 'cds-navigation-start' })\nexport class CdsNavigationStartDirective {\n  protected element: CdsNavigationStart;\n\n  get i18n() {\n    return this.element.i18n;\n  }\n  @Input() set i18n(value) {\n    this.element.i18n = value;\n  }\n  get expandedRoot() {\n    return this.element.expandedRoot;\n  }\n  @Input() set expandedRoot(value: boolean | '') {\n    this.element.expandedRoot = !!value;\n  }\n  get hasFocus() {\n    return this.element.hasFocus;\n  }\n  @Input() set hasFocus(value) {\n    this.element.hasFocus = value;\n  }\n  get isGroupStart() {\n    return this.element.isGroupStart;\n  }\n  @Input() set isGroupStart(value: boolean | '') {\n    this.element.isGroupStart = !!value;\n  }\n  get role() {\n    return this.element.role;\n  }\n  @Input() set role(value) {\n    this.element.role = value;\n  }\n  get navigationGroupId() {\n    return this.element.navigationGroupId;\n  }\n  @Input() set navigationGroupId(value) {\n    this.element.navigationGroupId = value;\n  }\n  get itemText() {\n    return this.element.itemText;\n  }\n  @Input() set itemText(value) {\n    this.element.itemText = value;\n  }\n\n  constructor(elementRef: ElementRef) {\n    this.element = elementRef.nativeElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { CdsNavigationItem } from '@cds/core/navigation';\n\n@Directive({ selector: 'cds-navigation-item' })\nexport class CdsNavigationItemDirective {\n  protected element: CdsNavigationItem;\n\n  get i18n() {\n    return this.element.i18n;\n  }\n  @Input() set i18n(value) {\n    this.element.i18n = value;\n  }\n  get active() {\n    return this.element.active;\n  }\n  @Input() set active(value: boolean | '') {\n    this.element.active = !!value;\n  }\n  get disabled() {\n    return this.element.disabled;\n  }\n  @Input() set disabled(value: boolean | '') {\n    this.element.disabled = !!value;\n  }\n  get expanded() {\n    return this.element.expanded;\n  }\n  @Input() set expanded(value: boolean | '') {\n    this.element.expanded = !!value;\n  }\n  get groupItem() {\n    return this.element.groupItem;\n  }\n  @Input() set groupItem(value: boolean | '') {\n    this.element.groupItem = !!value;\n  }\n  get hasFocus() {\n    return this.element.hasFocus;\n  }\n  @Input() set hasFocus(value) {\n    this.element.hasFocus = value;\n  }\n  get focusElement() {\n    return this.element.focusElement;\n  }\n  @Input() set focusElement(value) {\n    this.element.focusElement = value;\n  }\n  get itemText() {\n    return this.element.itemText;\n  }\n  @Input() set itemText(value) {\n    this.element.itemText = value;\n  }\n  get role() {\n    return this.element.role;\n  }\n  @Input() set role(value) {\n    this.element.role = value;\n  }\n\n  constructor(elementRef: ElementRef) {\n    this.element = elementRef.nativeElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport '@cds/core/navigation/register.js';\n\nimport { CdsNavigationDirective } from './cds-navigation.directive';\nimport { CdsNavigationGroupDirective } from './cds-navigation-group.directive';\nimport { CdsNavigationStartDirective } from './cds-navigation-start.directive';\nimport { CdsNavigationItemDirective } from './cds-navigation-item.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    CdsNavigationDirective,\n    CdsNavigationGroupDirective,\n    CdsNavigationStartDirective,\n    CdsNavigationItemDirective,\n  ],\n  exports: [\n    CdsNavigationDirective,\n    CdsNavigationGroupDirective,\n    CdsNavigationStartDirective,\n    CdsNavigationItemDirective,\n  ],\n})\nexport class CdsNavigationModule {}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './cds-navigation.directive';\nexport * from './cds-navigation-group.directive';\nexport * from './cds-navigation-start.directive';\nexport * from './cds-navigation-item.directive';\n\nexport * from './navigation.module';\n","/*\n * Public API Surface of cds-angular\n */\n\nexport * from './index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport '@cds/core/navigation/register.js';\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsNavigationDirective {\n    constructor(elementRef) {\n        this.cdsMotionChange = new EventEmitter();\n        this.element = elementRef.nativeElement;\n    }\n    get expandedRoot() {\n        return this.element.expandedRoot;\n    }\n    set expandedRoot(value) {\n        this.element.expandedRoot = !!value;\n    }\n    get cdsMotion() {\n        return this.element.cdsMotion;\n    }\n    set cdsMotion(value) {\n        this.element.cdsMotion = value;\n    }\n    get expanded() {\n        return this.element.expanded;\n    }\n    set expanded(value) {\n        this.element.expanded = !!value;\n    }\n    get i18n() {\n        return this.element.i18n;\n    }\n    set i18n(value) {\n        this.element.i18n = value;\n    }\n    get role() {\n        return this.element.role;\n    }\n    set role(value) {\n        this.element.role = value;\n    }\n}\nCdsNavigationDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsNavigationDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsNavigationDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: CdsNavigationDirective, selector: \"cds-navigation\", inputs: { expandedRoot: \"expandedRoot\", cdsMotion: \"cdsMotion\", expanded: \"expanded\", i18n: \"i18n\", role: \"role\" }, outputs: { cdsMotionChange: \"cdsMotionChange\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsNavigationDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-navigation' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { expandedRoot: [{\n                type: Input\n            }], cdsMotion: [{\n                type: Input\n            }], expanded: [{\n                type: Input\n            }], i18n: [{\n                type: Input\n            }], role: [{\n                type: Input\n            }], cdsMotionChange: [{\n                type: Output\n            }] } });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsNavigationGroupDirective {\n    constructor(elementRef) {\n        this.cdsMotionChange = new EventEmitter();\n        this.element = elementRef.nativeElement;\n    }\n    get cdsMotion() {\n        return this.element.cdsMotion;\n    }\n    set cdsMotion(value) {\n        this.element.cdsMotion = value;\n    }\n    get i18n() {\n        return this.element.i18n;\n    }\n    set i18n(value) {\n        this.element.i18n = value;\n    }\n    get expanded() {\n        return this.element.expanded;\n    }\n    set expanded(value) {\n        this.element.expanded = !!value;\n    }\n    get active() {\n        return this.element.active;\n    }\n    set active(value) {\n        this.element.active = !!value;\n    }\n    get hasFocus() {\n        return this.element.hasFocus;\n    }\n    set hasFocus(value) {\n        this.element.hasFocus = !!value;\n    }\n}\nCdsNavigationGroupDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsNavigationGroupDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsNavigationGroupDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: CdsNavigationGroupDirective, selector: \"cds-navigation-group\", inputs: { cdsMotion: \"cdsMotion\", i18n: \"i18n\", expanded: \"expanded\", active: \"active\", hasFocus: \"hasFocus\" }, outputs: { cdsMotionChange: \"cdsMotionChange\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsNavigationGroupDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-navigation-group' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { cdsMotion: [{\n                type: Input\n            }], i18n: [{\n                type: Input\n            }], expanded: [{\n                type: Input\n            }], active: [{\n                type: Input\n            }], hasFocus: [{\n                type: Input\n            }], cdsMotionChange: [{\n                type: Output\n            }] } });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsNavigationStartDirective {\n    constructor(elementRef) {\n        this.element = elementRef.nativeElement;\n    }\n    get i18n() {\n        return this.element.i18n;\n    }\n    set i18n(value) {\n        this.element.i18n = value;\n    }\n    get expandedRoot() {\n        return this.element.expandedRoot;\n    }\n    set expandedRoot(value) {\n        this.element.expandedRoot = !!value;\n    }\n    get hasFocus() {\n        return this.element.hasFocus;\n    }\n    set hasFocus(value) {\n        this.element.hasFocus = value;\n    }\n    get isGroupStart() {\n        return this.element.isGroupStart;\n    }\n    set isGroupStart(value) {\n        this.element.isGroupStart = !!value;\n    }\n    get role() {\n        return this.element.role;\n    }\n    set role(value) {\n        this.element.role = value;\n    }\n    get navigationGroupId() {\n        return this.element.navigationGroupId;\n    }\n    set navigationGroupId(value) {\n        this.element.navigationGroupId = value;\n    }\n    get itemText() {\n        return this.element.itemText;\n    }\n    set itemText(value) {\n        this.element.itemText = value;\n    }\n}\nCdsNavigationStartDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsNavigationStartDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsNavigationStartDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: CdsNavigationStartDirective, selector: \"cds-navigation-start\", inputs: { i18n: \"i18n\", expandedRoot: \"expandedRoot\", hasFocus: \"hasFocus\", isGroupStart: \"isGroupStart\", role: \"role\", navigationGroupId: \"navigationGroupId\", itemText: \"itemText\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsNavigationStartDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-navigation-start' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { i18n: [{\n                type: Input\n            }], expandedRoot: [{\n                type: Input\n            }], hasFocus: [{\n                type: Input\n            }], isGroupStart: [{\n                type: Input\n            }], role: [{\n                type: Input\n            }], navigationGroupId: [{\n                type: Input\n            }], itemText: [{\n                type: Input\n            }] } });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsNavigationItemDirective {\n    constructor(elementRef) {\n        this.element = elementRef.nativeElement;\n    }\n    get i18n() {\n        return this.element.i18n;\n    }\n    set i18n(value) {\n        this.element.i18n = value;\n    }\n    get active() {\n        return this.element.active;\n    }\n    set active(value) {\n        this.element.active = !!value;\n    }\n    get disabled() {\n        return this.element.disabled;\n    }\n    set disabled(value) {\n        this.element.disabled = !!value;\n    }\n    get expanded() {\n        return this.element.expanded;\n    }\n    set expanded(value) {\n        this.element.expanded = !!value;\n    }\n    get groupItem() {\n        return this.element.groupItem;\n    }\n    set groupItem(value) {\n        this.element.groupItem = !!value;\n    }\n    get hasFocus() {\n        return this.element.hasFocus;\n    }\n    set hasFocus(value) {\n        this.element.hasFocus = value;\n    }\n    get focusElement() {\n        return this.element.focusElement;\n    }\n    set focusElement(value) {\n        this.element.focusElement = value;\n    }\n    get itemText() {\n        return this.element.itemText;\n    }\n    set itemText(value) {\n        this.element.itemText = value;\n    }\n    get role() {\n        return this.element.role;\n    }\n    set role(value) {\n        this.element.role = value;\n    }\n}\nCdsNavigationItemDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsNavigationItemDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsNavigationItemDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: CdsNavigationItemDirective, selector: \"cds-navigation-item\", inputs: { i18n: \"i18n\", active: \"active\", disabled: \"disabled\", expanded: \"expanded\", groupItem: \"groupItem\", hasFocus: \"hasFocus\", focusElement: \"focusElement\", itemText: \"itemText\", role: \"role\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsNavigationItemDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-navigation-item' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { i18n: [{\n                type: Input\n            }], active: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], expanded: [{\n                type: Input\n            }], groupItem: [{\n                type: Input\n            }], hasFocus: [{\n                type: Input\n            }], focusElement: [{\n                type: Input\n            }], itemText: [{\n                type: Input\n            }], role: [{\n                type: Input\n            }] } });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsNavigationModule {\n}\nCdsNavigationModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsNavigationModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdsNavigationModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsNavigationModule, declarations: [CdsNavigationDirective,\n        CdsNavigationGroupDirective,\n        CdsNavigationStartDirective,\n        CdsNavigationItemDirective], imports: [CommonModule], exports: [CdsNavigationDirective,\n        CdsNavigationGroupDirective,\n        CdsNavigationStartDirective,\n        CdsNavigationItemDirective] });\nCdsNavigationModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsNavigationModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsNavigationModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [\n                        CdsNavigationDirective,\n                        CdsNavigationGroupDirective,\n                        CdsNavigationStartDirective,\n                        CdsNavigationItemDirective,\n                    ],\n                    exports: [\n                        CdsNavigationDirective,\n                        CdsNavigationGroupDirective,\n                        CdsNavigationStartDirective,\n                        CdsNavigationItemDirective,\n                    ],\n                }]\n        }] });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * Public API Surface of cds-angular\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdsNavigationDirective, CdsNavigationGroupDirective, CdsNavigationItemDirective, CdsNavigationModule, CdsNavigationStartDirective };\n","map":{"version":3,"file":"navigation.mjs","sources":["../../../projects/cds-angular/navigation/cds-navigation.directive.ts","../../../projects/cds-angular/navigation/cds-navigation-group.directive.ts","../../../projects/cds-angular/navigation/cds-navigation-start.directive.ts","../../../projects/cds-angular/navigation/cds-navigation-item.directive.ts","../../../projects/cds-angular/navigation/navigation.module.ts","../../../projects/cds-angular/navigation/index.ts","../../../projects/cds-angular/navigation/public-api.ts","../../../projects/cds-angular/navigation/navigation.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Input, Output, EventEmitter } from '@angular/core';\nimport { CdsNavigation } from '@cds/core/navigation';\n\n@Directive({ selector: 'cds-navigation' })\nexport class CdsNavigationDirective {\n  protected element: CdsNavigation;\n\n  get expandedRoot() {\n    return this.element.expandedRoot;\n  }\n  @Input() set expandedRoot(value: boolean | '') {\n    this.element.expandedRoot = !!value;\n  }\n  get cdsMotion() {\n    return this.element.cdsMotion;\n  }\n  @Input() set cdsMotion(value) {\n    this.element.cdsMotion = value;\n  }\n  get expanded() {\n    return this.element.expanded;\n  }\n  @Input() set expanded(value: boolean | '') {\n    this.element.expanded = !!value;\n  }\n  get i18n() {\n    return this.element.i18n;\n  }\n  @Input() set i18n(value) {\n    this.element.i18n = value;\n  }\n  get role() {\n    return this.element.role;\n  }\n  @Input() set role(value) {\n    this.element.role = value;\n  }\n\n  @Output() cdsMotionChange: EventEmitter<CustomEvent> = new EventEmitter();\n\n  constructor(elementRef: ElementRef) {\n    this.element = elementRef.nativeElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Input, Output, EventEmitter } from '@angular/core';\nimport { CdsNavigationGroup } from '@cds/core/navigation';\n\n@Directive({ selector: 'cds-navigation-group' })\nexport class CdsNavigationGroupDirective {\n  protected element: CdsNavigationGroup;\n\n  get cdsMotion() {\n    return this.element.cdsMotion;\n  }\n  @Input() set cdsMotion(value) {\n    this.element.cdsMotion = value;\n  }\n  get i18n() {\n    return this.element.i18n;\n  }\n  @Input() set i18n(value) {\n    this.element.i18n = value;\n  }\n  get expanded() {\n    return this.element.expanded;\n  }\n  @Input() set expanded(value: boolean | '') {\n    this.element.expanded = !!value;\n  }\n  get active() {\n    return this.element.active;\n  }\n  @Input() set active(value: boolean | '') {\n    this.element.active = !!value;\n  }\n  get hasFocus() {\n    return this.element.hasFocus;\n  }\n  @Input() set hasFocus(value: boolean | '') {\n    this.element.hasFocus = !!value;\n  }\n\n  @Output() cdsMotionChange: EventEmitter<CustomEvent> = new EventEmitter();\n\n  constructor(elementRef: ElementRef) {\n    this.element = elementRef.nativeElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { CdsNavigationStart } from '@cds/core/navigation';\n\n@Directive({ selector: 'cds-navigation-start' })\nexport class CdsNavigationStartDirective {\n  protected element: CdsNavigationStart;\n\n  get i18n() {\n    return this.element.i18n;\n  }\n  @Input() set i18n(value) {\n    this.element.i18n = value;\n  }\n  get expandedRoot() {\n    return this.element.expandedRoot;\n  }\n  @Input() set expandedRoot(value: boolean | '') {\n    this.element.expandedRoot = !!value;\n  }\n  get hasFocus() {\n    return this.element.hasFocus;\n  }\n  @Input() set hasFocus(value) {\n    this.element.hasFocus = value;\n  }\n  get isGroupStart() {\n    return this.element.isGroupStart;\n  }\n  @Input() set isGroupStart(value: boolean | '') {\n    this.element.isGroupStart = !!value;\n  }\n  get role() {\n    return this.element.role;\n  }\n  @Input() set role(value) {\n    this.element.role = value;\n  }\n  get navigationGroupId() {\n    return this.element.navigationGroupId;\n  }\n  @Input() set navigationGroupId(value) {\n    this.element.navigationGroupId = value;\n  }\n  get itemText() {\n    return this.element.itemText;\n  }\n  @Input() set itemText(value) {\n    this.element.itemText = value;\n  }\n\n  constructor(elementRef: ElementRef) {\n    this.element = elementRef.nativeElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { CdsNavigationItem } from '@cds/core/navigation';\n\n@Directive({ selector: 'cds-navigation-item' })\nexport class CdsNavigationItemDirective {\n  protected element: CdsNavigationItem;\n\n  get i18n() {\n    return this.element.i18n;\n  }\n  @Input() set i18n(value) {\n    this.element.i18n = value;\n  }\n  get active() {\n    return this.element.active;\n  }\n  @Input() set active(value: boolean | '') {\n    this.element.active = !!value;\n  }\n  get disabled() {\n    return this.element.disabled;\n  }\n  @Input() set disabled(value: boolean | '') {\n    this.element.disabled = !!value;\n  }\n  get expanded() {\n    return this.element.expanded;\n  }\n  @Input() set expanded(value: boolean | '') {\n    this.element.expanded = !!value;\n  }\n  get groupItem() {\n    return this.element.groupItem;\n  }\n  @Input() set groupItem(value: boolean | '') {\n    this.element.groupItem = !!value;\n  }\n  get hasFocus() {\n    return this.element.hasFocus;\n  }\n  @Input() set hasFocus(value) {\n    this.element.hasFocus = value;\n  }\n  get focusElement() {\n    return this.element.focusElement;\n  }\n  @Input() set focusElement(value) {\n    this.element.focusElement = value;\n  }\n  get itemText() {\n    return this.element.itemText;\n  }\n  @Input() set itemText(value) {\n    this.element.itemText = value;\n  }\n  get role() {\n    return this.element.role;\n  }\n  @Input() set role(value) {\n    this.element.role = value;\n  }\n\n  constructor(elementRef: ElementRef) {\n    this.element = elementRef.nativeElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport '@cds/core/navigation/register.js';\n\nimport { CdsNavigationDirective } from './cds-navigation.directive';\nimport { CdsNavigationGroupDirective } from './cds-navigation-group.directive';\nimport { CdsNavigationStartDirective } from './cds-navigation-start.directive';\nimport { CdsNavigationItemDirective } from './cds-navigation-item.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    CdsNavigationDirective,\n    CdsNavigationGroupDirective,\n    CdsNavigationStartDirective,\n    CdsNavigationItemDirective,\n  ],\n  exports: [\n    CdsNavigationDirective,\n    CdsNavigationGroupDirective,\n    CdsNavigationStartDirective,\n    CdsNavigationItemDirective,\n  ],\n})\nexport class CdsNavigationModule {}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './cds-navigation.directive';\nexport * from './cds-navigation-group.directive';\nexport * from './cds-navigation-start.directive';\nexport * from './cds-navigation-item.directive';\n\nexport * from './navigation.module';\n","/*\n * Public API Surface of cds-angular\n */\n\nexport * from './index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}}}