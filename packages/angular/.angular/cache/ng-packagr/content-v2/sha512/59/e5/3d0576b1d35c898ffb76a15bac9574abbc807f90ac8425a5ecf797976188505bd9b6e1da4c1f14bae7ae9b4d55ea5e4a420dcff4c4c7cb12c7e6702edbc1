{"hash":"b7a713a08d2c17ed31c5b624a779171970655fd3","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { Directive, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport '@cds/core/icon/register.js';\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsIconDirective {\n    constructor(elementRef) {\n        this.element = elementRef.nativeElement;\n    }\n    get shape() {\n        return this.element.shape;\n    }\n    set shape(value) {\n        this.element.shape = value;\n    }\n    get size() {\n        return this.element.size;\n    }\n    set size(value) {\n        this.element.size = value;\n    }\n    get direction() {\n        return this.element.direction;\n    }\n    set direction(value) {\n        this.element.direction = value;\n    }\n    get flip() {\n        return this.element.flip;\n    }\n    set flip(value) {\n        this.element.flip = value;\n    }\n    get solid() {\n        return this.element.solid;\n    }\n    set solid(value) {\n        this.element.solid = !!value;\n    }\n    get status() {\n        return this.element.status;\n    }\n    set status(value) {\n        this.element.status = value;\n    }\n    get inverse() {\n        return this.element.inverse;\n    }\n    set inverse(value) {\n        this.element.inverse = !!value;\n    }\n    get badge() {\n        return this.element.badge;\n    }\n    set badge(value) {\n        this.element.badge = value;\n    }\n}\nCdsIconDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsIconDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsIconDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: CdsIconDirective, selector: \"cds-icon\", inputs: { shape: \"shape\", size: \"size\", direction: \"direction\", flip: \"flip\", solid: \"solid\", status: \"status\", inverse: \"inverse\", badge: \"badge\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsIconDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-icon' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { shape: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], direction: [{\n                type: Input\n            }], flip: [{\n                type: Input\n            }], solid: [{\n                type: Input\n            }], status: [{\n                type: Input\n            }], inverse: [{\n                type: Input\n            }], badge: [{\n                type: Input\n            }] } });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsIconModule {\n}\nCdsIconModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsIconModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdsIconModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsIconModule, declarations: [CdsIconDirective], imports: [CommonModule], exports: [CdsIconDirective] });\nCdsIconModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsIconModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsIconModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [CdsIconDirective],\n                    exports: [CdsIconDirective],\n                }]\n        }] });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * Public API Surface of cds-angular\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdsIconDirective, CdsIconModule };\n","map":{"version":3,"file":"icon.mjs","sources":["../../../projects/cds-angular/icon/cds-icon.directive.ts","../../../projects/cds-angular/icon/icon.module.ts","../../../projects/cds-angular/icon/index.ts","../../../projects/cds-angular/icon/public-api.ts","../../../projects/cds-angular/icon/icon.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { CdsIcon } from '@cds/core/icon';\n\n@Directive({ selector: 'cds-icon' })\nexport class CdsIconDirective {\n  protected element: CdsIcon;\n\n  get shape() {\n    return this.element.shape;\n  }\n  @Input() set shape(value) {\n    this.element.shape = value;\n  }\n  get size() {\n    return this.element.size;\n  }\n  @Input() set size(value) {\n    this.element.size = value;\n  }\n  get direction() {\n    return this.element.direction;\n  }\n  @Input() set direction(value) {\n    this.element.direction = value;\n  }\n  get flip() {\n    return this.element.flip;\n  }\n  @Input() set flip(value) {\n    this.element.flip = value;\n  }\n  get solid() {\n    return this.element.solid;\n  }\n  @Input() set solid(value: boolean | '') {\n    this.element.solid = !!value;\n  }\n  get status() {\n    return this.element.status;\n  }\n  @Input() set status(value) {\n    this.element.status = value;\n  }\n  get inverse() {\n    return this.element.inverse;\n  }\n  @Input() set inverse(value: boolean | '') {\n    this.element.inverse = !!value;\n  }\n  get badge() {\n    return this.element.badge;\n  }\n  @Input() set badge(value) {\n    this.element.badge = value;\n  }\n\n  constructor(elementRef: ElementRef) {\n    this.element = elementRef.nativeElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport '@cds/core/icon/register.js';\n\nimport { CdsIconDirective } from './cds-icon.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CdsIconDirective],\n  exports: [CdsIconDirective],\n})\nexport class CdsIconModule {}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './cds-icon.directive';\n\nexport * from './icon.module';\n","/*\n * Public API Surface of cds-angular\n */\n\nexport * from './index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;AAAA;;;;;MAUa,gBAAgB;IAoD3B,YAAY,UAAsB;QAChC,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,aAAa,CAAC;KACzC;IAnDD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;KAC3B;IACD,IAAa,KAAK,CAAC,KAAK;QACtB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;KAC5B;IACD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;KAC1B;IACD,IAAa,IAAI,CAAC,KAAK;QACrB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;KAC3B;IACD,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;KAC/B;IACD,IAAa,SAAS,CAAC,KAAK;QAC1B,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC;KAChC;IACD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;KAC1B;IACD,IAAa,IAAI,CAAC,KAAK;QACrB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;KAC3B;IACD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;KAC3B;IACD,IAAa,KAAK,CAAC,KAAmB;QACpC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;KAC9B;IACD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;KAC5B;IACD,IAAa,MAAM,CAAC,KAAK;QACvB,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;KAC7B;IACD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;KAC7B;IACD,IAAa,OAAO,CAAC,KAAmB;QACtC,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC;KAChC;IACD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;KAC3B;IACD,IAAa,KAAK,CAAC,KAAK;QACtB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;KAC5B;;6GAlDU,gBAAgB;iGAAhB,gBAAgB;2FAAhB,gBAAgB;kBAD5B,SAAS;mBAAC,EAAE,QAAQ,EAAE,UAAU,EAAE;iGAOpB,KAAK;sBAAjB,KAAK;gBAMO,IAAI;sBAAhB,KAAK;gBAMO,SAAS;sBAArB,KAAK;gBAMO,IAAI;sBAAhB,KAAK;gBAMO,KAAK;sBAAjB,KAAK;gBAMO,MAAM;sBAAlB,KAAK;gBAMO,OAAO;sBAAnB,KAAK;gBAMO,KAAK;sBAAjB,KAAK;;;AC1DR;;;;;MAiBa,aAAa;;0GAAb,aAAa;2GAAb,aAAa,iBAHT,gBAAgB,aADrB,YAAY,aAEZ,gBAAgB;2GAEf,aAAa,YAJf,CAAC,YAAY,CAAC;2FAIZ,aAAa;kBALzB,QAAQ;mBAAC;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,YAAY,EAAE,CAAC,gBAAgB,CAAC;oBAChC,OAAO,EAAE,CAAC,gBAAgB,CAAC;iBAC5B;;;AChBD;;;;;;ACAA;;;;ACAA;;;;;;"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { Directive, Input, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport '@cds/core/icon/register.js';\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsIconDirective {\n    constructor(elementRef) {\n        this.element = elementRef.nativeElement;\n    }\n    get shape() {\n        return this.element.shape;\n    }\n    set shape(value) {\n        this.element.shape = value;\n    }\n    get size() {\n        return this.element.size;\n    }\n    set size(value) {\n        this.element.size = value;\n    }\n    get direction() {\n        return this.element.direction;\n    }\n    set direction(value) {\n        this.element.direction = value;\n    }\n    get flip() {\n        return this.element.flip;\n    }\n    set flip(value) {\n        this.element.flip = value;\n    }\n    get solid() {\n        return this.element.solid;\n    }\n    set solid(value) {\n        this.element.solid = !!value;\n    }\n    get status() {\n        return this.element.status;\n    }\n    set status(value) {\n        this.element.status = value;\n    }\n    get inverse() {\n        return this.element.inverse;\n    }\n    set inverse(value) {\n        this.element.inverse = !!value;\n    }\n    get badge() {\n        return this.element.badge;\n    }\n    set badge(value) {\n        this.element.badge = value;\n    }\n}\nCdsIconDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsIconDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsIconDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: CdsIconDirective, selector: \"cds-icon\", inputs: { shape: \"shape\", size: \"size\", direction: \"direction\", flip: \"flip\", solid: \"solid\", status: \"status\", inverse: \"inverse\", badge: \"badge\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsIconDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-icon' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { shape: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], direction: [{\n                type: Input\n            }], flip: [{\n                type: Input\n            }], solid: [{\n                type: Input\n            }], status: [{\n                type: Input\n            }], inverse: [{\n                type: Input\n            }], badge: [{\n                type: Input\n            }] } });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsIconModule {\n}\nCdsIconModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsIconModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdsIconModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsIconModule, declarations: [CdsIconDirective], imports: [CommonModule], exports: [CdsIconDirective] });\nCdsIconModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsIconModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsIconModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [CdsIconDirective],\n                    exports: [CdsIconDirective],\n                }]\n        }] });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * Public API Surface of cds-angular\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdsIconDirective, CdsIconModule };\n","map":{"version":3,"file":"icon.mjs","sources":["../../../projects/cds-angular/icon/cds-icon.directive.ts","../../../projects/cds-angular/icon/icon.module.ts","../../../projects/cds-angular/icon/index.ts","../../../projects/cds-angular/icon/public-api.ts","../../../projects/cds-angular/icon/icon.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { CdsIcon } from '@cds/core/icon';\n\n@Directive({ selector: 'cds-icon' })\nexport class CdsIconDirective {\n  protected element: CdsIcon;\n\n  get shape() {\n    return this.element.shape;\n  }\n  @Input() set shape(value) {\n    this.element.shape = value;\n  }\n  get size() {\n    return this.element.size;\n  }\n  @Input() set size(value) {\n    this.element.size = value;\n  }\n  get direction() {\n    return this.element.direction;\n  }\n  @Input() set direction(value) {\n    this.element.direction = value;\n  }\n  get flip() {\n    return this.element.flip;\n  }\n  @Input() set flip(value) {\n    this.element.flip = value;\n  }\n  get solid() {\n    return this.element.solid;\n  }\n  @Input() set solid(value: boolean | '') {\n    this.element.solid = !!value;\n  }\n  get status() {\n    return this.element.status;\n  }\n  @Input() set status(value) {\n    this.element.status = value;\n  }\n  get inverse() {\n    return this.element.inverse;\n  }\n  @Input() set inverse(value: boolean | '') {\n    this.element.inverse = !!value;\n  }\n  get badge() {\n    return this.element.badge;\n  }\n  @Input() set badge(value) {\n    this.element.badge = value;\n  }\n\n  constructor(elementRef: ElementRef) {\n    this.element = elementRef.nativeElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport '@cds/core/icon/register.js';\n\nimport { CdsIconDirective } from './cds-icon.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CdsIconDirective],\n  exports: [CdsIconDirective],\n})\nexport class CdsIconModule {}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './cds-icon.directive';\n\nexport * from './icon.module';\n","/*\n * Public API Surface of cds-angular\n */\n\nexport * from './index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;AAAA;;;;;MAUa,gBAAgB;IAoD3B,YAAY,UAAsB;QAChC,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,aAAa,CAAC;KACzC;IAnDD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;KAC3B;IACD,IAAa,KAAK,CAAC,KAAK;QACtB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;KAC5B;IACD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;KAC1B;IACD,IAAa,IAAI,CAAC,KAAK;QACrB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;KAC3B;IACD,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;KAC/B;IACD,IAAa,SAAS,CAAC,KAAK;QAC1B,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC;KAChC;IACD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;KAC1B;IACD,IAAa,IAAI,CAAC,KAAK;QACrB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;KAC3B;IACD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;KAC3B;IACD,IAAa,KAAK,CAAC,KAAmB;QACpC,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;KAC9B;IACD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;KAC5B;IACD,IAAa,MAAM,CAAC,KAAK;QACvB,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;KAC7B;IACD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;KAC7B;IACD,IAAa,OAAO,CAAC,KAAmB;QACtC,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC;KAChC;IACD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;KAC3B;IACD,IAAa,KAAK,CAAC,KAAK;QACtB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;KAC5B;;6GAlDU,gBAAgB;iGAAhB,gBAAgB;2FAAhB,gBAAgB;kBAD5B,SAAS;mBAAC,EAAE,QAAQ,EAAE,UAAU,EAAE;iGAOpB,KAAK;sBAAjB,KAAK;gBAMO,IAAI;sBAAhB,KAAK;gBAMO,SAAS;sBAArB,KAAK;gBAMO,IAAI;sBAAhB,KAAK;gBAMO,KAAK;sBAAjB,KAAK;gBAMO,MAAM;sBAAlB,KAAK;gBAMO,OAAO;sBAAnB,KAAK;gBAMO,KAAK;sBAAjB,KAAK;;;AC1DR;;;;;MAiBa,aAAa;;0GAAb,aAAa;2GAAb,aAAa,iBAHT,gBAAgB,aADrB,YAAY,aAEZ,gBAAgB;2GAEf,aAAa,YAJf,CAAC,YAAY,CAAC;2FAIZ,aAAa;kBALzB,QAAQ;mBAAC;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,YAAY,EAAE,CAAC,gBAAgB,CAAC;oBAChC,OAAO,EAAE,CAAC,gBAAgB,CAAC;iBAC5B;;;AChBD;;;;;;ACAA;;;;ACAA;;;;;;"}}}