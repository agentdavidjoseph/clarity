{"hash":"05cf59451b29a8cb9c147500a1c9e4f62b88f612","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { Directive, Input, EventEmitter, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport '@cds/core/forms/register.js';\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsControlMessageDirective {\n    constructor(elementRef) {\n        this.element = elementRef.nativeElement;\n    }\n    get status() {\n        return this.element.status;\n    }\n    set status(value) {\n        this.element.status = value;\n    }\n    get error() {\n        return this.element.error;\n    }\n    set error(value) {\n        this.element.error = value;\n    }\n}\nCdsControlMessageDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsControlMessageDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsControlMessageDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: CdsControlMessageDirective, selector: \"cds-control-message\", inputs: { status: \"status\", error: \"error\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsControlMessageDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-control-message' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { status: [{\n                type: Input\n            }], error: [{\n                type: Input\n            }] } });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsControlActionDirective {\n    constructor(elementRef) {\n        this.element = elementRef.nativeElement;\n    }\n    get action() {\n        return this.element.action;\n    }\n    set action(value) {\n        this.element.action = value;\n    }\n    get readonly() {\n        return this.element.readonly;\n    }\n    set readonly(value) {\n        this.element.readonly = !!value;\n    }\n    get ariaLabel() {\n        return this.element.ariaLabel;\n    }\n    set ariaLabel(value) {\n        this.element.ariaLabel = value;\n    }\n    get type() {\n        return this.element.type;\n    }\n    set type(value) {\n        this.element.type = value;\n    }\n    get name() {\n        return this.element.name;\n    }\n    set name(value) {\n        this.element.name = value;\n    }\n    get value() {\n        return this.element.value;\n    }\n    set value(value) {\n        this.element.value = value;\n    }\n    get disabled() {\n        return this.element.disabled;\n    }\n    set disabled(value) {\n        this.element.disabled = !!value;\n    }\n}\nCdsControlActionDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsControlActionDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsControlActionDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: CdsControlActionDirective, selector: \"cds-control-action\", inputs: { action: \"action\", readonly: \"readonly\", ariaLabel: \"ariaLabel\", type: \"type\", name: \"name\", value: \"value\", disabled: \"disabled\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsControlActionDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-control-action' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { action: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsInternalControlGroupDirective {\n    constructor(elementRef) {\n        this.element = elementRef.nativeElement;\n    }\n    get status() {\n        return this.element.status;\n    }\n    set status(value) {\n        this.element.status = value;\n    }\n    get layout() {\n        return this.element.layout;\n    }\n    set layout(value) {\n        this.element.layout = value;\n    }\n    get controlAlign() {\n        return this.element.controlAlign;\n    }\n    set controlAlign(value) {\n        this.element.controlAlign = value;\n    }\n    get disabled() {\n        return this.element.disabled;\n    }\n    set disabled(value) {\n        this.element.disabled = !!value;\n    }\n    get controlWidth() {\n        return this.element.controlWidth;\n    }\n    set controlWidth(value) {\n        this.element.controlWidth = value;\n    }\n    get responsive() {\n        return this.element.responsive;\n    }\n    set responsive(value) {\n        this.element.responsive = !!value;\n    }\n}\nCdsInternalControlGroupDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsInternalControlGroupDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsInternalControlGroupDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: CdsInternalControlGroupDirective, selector: \"cds-internal-control-group\", inputs: { status: \"status\", layout: \"layout\", controlAlign: \"controlAlign\", disabled: \"disabled\", controlWidth: \"controlWidth\", responsive: \"responsive\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsInternalControlGroupDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-internal-control-group' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { status: [{\n                type: Input\n            }], layout: [{\n                type: Input\n            }], controlAlign: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], controlWidth: [{\n                type: Input\n            }], responsive: [{\n                type: Input\n            }] } });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsControlDirective {\n    constructor(elementRef) {\n        this.layoutChange = new EventEmitter();\n        this.element = elementRef.nativeElement;\n    }\n    get status() {\n        return this.element.status;\n    }\n    set status(value) {\n        this.element.status = value;\n    }\n    get controlWidth() {\n        return this.element.controlWidth;\n    }\n    set controlWidth(value) {\n        this.element.controlWidth = value;\n    }\n    get validate() {\n        return this.element.validate;\n    }\n    set validate(value) {\n        this.element.validate = !!value;\n    }\n    get responsive() {\n        return this.element.responsive;\n    }\n    set responsive(value) {\n        this.element.responsive = !!value;\n    }\n    get layout() {\n        return this.element.layout;\n    }\n    set layout(value) {\n        this.element.layout = value;\n    }\n}\nCdsControlDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsControlDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsControlDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: CdsControlDirective, selector: \"cds-control\", inputs: { status: \"status\", controlWidth: \"controlWidth\", validate: \"validate\", responsive: \"responsive\", layout: \"layout\" }, outputs: { layoutChange: \"layoutChange\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsControlDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-control' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { status: [{\n                type: Input\n            }], controlWidth: [{\n                type: Input\n            }], validate: [{\n                type: Input\n            }], responsive: [{\n                type: Input\n            }], layout: [{\n                type: Input\n            }], layoutChange: [{\n                type: Output\n            }] } });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsFormGroupDirective {\n    constructor(elementRef) {\n        this.element = elementRef.nativeElement;\n    }\n    get layout() {\n        return this.element.layout;\n    }\n    set layout(value) {\n        this.element.layout = value;\n    }\n    get controlWidth() {\n        return this.element.controlWidth;\n    }\n    set controlWidth(value) {\n        this.element.controlWidth = value;\n    }\n    get responsive() {\n        return this.element.responsive;\n    }\n    set responsive(value) {\n        this.element.responsive = !!value;\n    }\n    get validate() {\n        return this.element.validate;\n    }\n    set validate(value) {\n        this.element.validate = !!value;\n    }\n}\nCdsFormGroupDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsFormGroupDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsFormGroupDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: CdsFormGroupDirective, selector: \"cds-form-group\", inputs: { layout: \"layout\", controlWidth: \"controlWidth\", responsive: \"responsive\", validate: \"validate\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsFormGroupDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-form-group' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { layout: [{\n                type: Input\n            }], controlWidth: [{\n                type: Input\n            }], responsive: [{\n                type: Input\n            }], validate: [{\n                type: Input\n            }] } });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsInternalControlInlineDirective {\n    constructor(elementRef) {\n        this.layoutChange = new EventEmitter();\n        this.element = elementRef.nativeElement;\n    }\n    get controlAlign() {\n        return this.element.controlAlign;\n    }\n    set controlAlign(value) {\n        this.element.controlAlign = value;\n    }\n    get status() {\n        return this.element.status;\n    }\n    set status(value) {\n        this.element.status = value;\n    }\n    get controlWidth() {\n        return this.element.controlWidth;\n    }\n    set controlWidth(value) {\n        this.element.controlWidth = value;\n    }\n    get validate() {\n        return this.element.validate;\n    }\n    set validate(value) {\n        this.element.validate = !!value;\n    }\n    get responsive() {\n        return this.element.responsive;\n    }\n    set responsive(value) {\n        this.element.responsive = !!value;\n    }\n    get layout() {\n        return this.element.layout;\n    }\n    set layout(value) {\n        this.element.layout = value;\n    }\n}\nCdsInternalControlInlineDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsInternalControlInlineDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsInternalControlInlineDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: CdsInternalControlInlineDirective, selector: \"cds-internal-control-inline\", inputs: { controlAlign: \"controlAlign\", status: \"status\", controlWidth: \"controlWidth\", validate: \"validate\", responsive: \"responsive\", layout: \"layout\" }, outputs: { layoutChange: \"layoutChange\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsInternalControlInlineDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-internal-control-inline' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { controlAlign: [{\n                type: Input\n            }], status: [{\n                type: Input\n            }], controlWidth: [{\n                type: Input\n            }], validate: [{\n                type: Input\n            }], responsive: [{\n                type: Input\n            }], layout: [{\n                type: Input\n            }], layoutChange: [{\n                type: Output\n            }] } });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsInternalControlLabelDirective {\n    constructor(elementRef) {\n        this.element = elementRef.nativeElement;\n    }\n    get disabled() {\n        return this.element.disabled;\n    }\n    set disabled(value) {\n        this.element.disabled = !!value;\n    }\n    get action() {\n        return this.element.action;\n    }\n    set action(value) {\n        this.element.action = value;\n    }\n}\nCdsInternalControlLabelDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsInternalControlLabelDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsInternalControlLabelDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: CdsInternalControlLabelDirective, selector: \"cds-internal-control-label\", inputs: { disabled: \"disabled\", action: \"action\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsInternalControlLabelDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-internal-control-label' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { disabled: [{\n                type: Input\n            }], action: [{\n                type: Input\n            }] } });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsFormsModule {\n}\nCdsFormsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsFormsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdsFormsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsFormsModule, declarations: [CdsControlMessageDirective,\n        CdsControlActionDirective,\n        CdsInternalControlGroupDirective,\n        CdsControlDirective,\n        CdsFormGroupDirective,\n        CdsInternalControlInlineDirective,\n        CdsInternalControlLabelDirective], imports: [CommonModule], exports: [CdsControlMessageDirective,\n        CdsControlActionDirective,\n        CdsInternalControlGroupDirective,\n        CdsControlDirective,\n        CdsFormGroupDirective,\n        CdsInternalControlInlineDirective,\n        CdsInternalControlLabelDirective] });\nCdsFormsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsFormsModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsFormsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [\n                        CdsControlMessageDirective,\n                        CdsControlActionDirective,\n                        CdsInternalControlGroupDirective,\n                        CdsControlDirective,\n                        CdsFormGroupDirective,\n                        CdsInternalControlInlineDirective,\n                        CdsInternalControlLabelDirective,\n                    ],\n                    exports: [\n                        CdsControlMessageDirective,\n                        CdsControlActionDirective,\n                        CdsInternalControlGroupDirective,\n                        CdsControlDirective,\n                        CdsFormGroupDirective,\n                        CdsInternalControlInlineDirective,\n                        CdsInternalControlLabelDirective,\n                    ],\n                }]\n        }] });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * Public API Surface of cds-angular\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdsControlActionDirective, CdsControlDirective, CdsControlMessageDirective, CdsFormGroupDirective, CdsFormsModule, CdsInternalControlGroupDirective, CdsInternalControlInlineDirective, CdsInternalControlLabelDirective };\n","map":{"version":3,"file":"forms.mjs","sources":["../../../projects/cds-angular/forms/cds-control-message.directive.ts","../../../projects/cds-angular/forms/cds-control-action.directive.ts","../../../projects/cds-angular/forms/cds-internal-control-group.directive.ts","../../../projects/cds-angular/forms/cds-control.directive.ts","../../../projects/cds-angular/forms/cds-form-group.directive.ts","../../../projects/cds-angular/forms/cds-internal-control-inline.directive.ts","../../../projects/cds-angular/forms/cds-internal-control-label.directive.ts","../../../projects/cds-angular/forms/forms.module.ts","../../../projects/cds-angular/forms/index.ts","../../../projects/cds-angular/forms/public-api.ts","../../../projects/cds-angular/forms/forms.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { CdsControlMessage } from '@cds/core/forms';\n\n@Directive({ selector: 'cds-control-message' })\nexport class CdsControlMessageDirective {\n  protected element: CdsControlMessage;\n\n  get status() {\n    return this.element.status;\n  }\n  @Input() set status(value) {\n    this.element.status = value;\n  }\n  get error() {\n    return this.element.error;\n  }\n  @Input() set error(value) {\n    this.element.error = value;\n  }\n\n  constructor(elementRef: ElementRef) {\n    this.element = elementRef.nativeElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { CdsControlAction } from '@cds/core/forms';\n\n@Directive({ selector: 'cds-control-action' })\nexport class CdsControlActionDirective {\n  protected element: CdsControlAction;\n\n  get action() {\n    return this.element.action;\n  }\n  @Input() set action(value) {\n    this.element.action = value;\n  }\n  get readonly() {\n    return this.element.readonly;\n  }\n  @Input() set readonly(value: boolean | '') {\n    this.element.readonly = !!value;\n  }\n  get ariaLabel() {\n    return this.element.ariaLabel;\n  }\n  @Input() set ariaLabel(value) {\n    this.element.ariaLabel = value;\n  }\n  get type() {\n    return this.element.type;\n  }\n  @Input() set type(value) {\n    this.element.type = value;\n  }\n  get name() {\n    return this.element.name;\n  }\n  @Input() set name(value) {\n    this.element.name = value;\n  }\n  get value() {\n    return this.element.value;\n  }\n  @Input() set value(value) {\n    this.element.value = value;\n  }\n  get disabled() {\n    return this.element.disabled;\n  }\n  @Input() set disabled(value: boolean | '') {\n    this.element.disabled = !!value;\n  }\n\n  constructor(elementRef: ElementRef) {\n    this.element = elementRef.nativeElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { CdsInternalControlGroup } from '@cds/core/forms';\n\n@Directive({ selector: 'cds-internal-control-group' })\nexport class CdsInternalControlGroupDirective {\n  protected element: CdsInternalControlGroup;\n\n  get status() {\n    return this.element.status;\n  }\n  @Input() set status(value) {\n    this.element.status = value;\n  }\n  get layout() {\n    return this.element.layout;\n  }\n  @Input() set layout(value) {\n    this.element.layout = value;\n  }\n  get controlAlign() {\n    return this.element.controlAlign;\n  }\n  @Input() set controlAlign(value) {\n    this.element.controlAlign = value;\n  }\n  get disabled() {\n    return this.element.disabled;\n  }\n  @Input() set disabled(value: boolean | '') {\n    this.element.disabled = !!value;\n  }\n  get controlWidth() {\n    return this.element.controlWidth;\n  }\n  @Input() set controlWidth(value) {\n    this.element.controlWidth = value;\n  }\n  get responsive() {\n    return this.element.responsive;\n  }\n  @Input() set responsive(value: boolean | '') {\n    this.element.responsive = !!value;\n  }\n\n  constructor(elementRef: ElementRef) {\n    this.element = elementRef.nativeElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Input, Output, EventEmitter } from '@angular/core';\nimport { CdsControl } from '@cds/core/forms';\n\n@Directive({ selector: 'cds-control' })\nexport class CdsControlDirective {\n  protected element: CdsControl;\n\n  get status() {\n    return this.element.status;\n  }\n  @Input() set status(value) {\n    this.element.status = value;\n  }\n  get controlWidth() {\n    return this.element.controlWidth;\n  }\n  @Input() set controlWidth(value) {\n    this.element.controlWidth = value;\n  }\n  get validate() {\n    return this.element.validate;\n  }\n  @Input() set validate(value: boolean | '') {\n    this.element.validate = !!value;\n  }\n  get responsive() {\n    return this.element.responsive;\n  }\n  @Input() set responsive(value: boolean | '') {\n    this.element.responsive = !!value;\n  }\n  get layout() {\n    return this.element.layout;\n  }\n  @Input() set layout(value) {\n    this.element.layout = value;\n  }\n\n  @Output() layoutChange: EventEmitter<CustomEvent> = new EventEmitter();\n\n  constructor(elementRef: ElementRef) {\n    this.element = elementRef.nativeElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { CdsFormGroup } from '@cds/core/forms';\n\n@Directive({ selector: 'cds-form-group' })\nexport class CdsFormGroupDirective {\n  protected element: CdsFormGroup;\n\n  get layout() {\n    return this.element.layout;\n  }\n  @Input() set layout(value) {\n    this.element.layout = value;\n  }\n  get controlWidth() {\n    return this.element.controlWidth;\n  }\n  @Input() set controlWidth(value) {\n    this.element.controlWidth = value;\n  }\n  get responsive() {\n    return this.element.responsive;\n  }\n  @Input() set responsive(value: boolean | '') {\n    this.element.responsive = !!value;\n  }\n  get validate() {\n    return this.element.validate;\n  }\n  @Input() set validate(value: boolean | '') {\n    this.element.validate = !!value;\n  }\n\n  constructor(elementRef: ElementRef) {\n    this.element = elementRef.nativeElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Input, Output, EventEmitter } from '@angular/core';\nimport { CdsInternalControlInline } from '@cds/core/forms';\n\n@Directive({ selector: 'cds-internal-control-inline' })\nexport class CdsInternalControlInlineDirective {\n  protected element: CdsInternalControlInline;\n\n  get controlAlign() {\n    return this.element.controlAlign;\n  }\n  @Input() set controlAlign(value) {\n    this.element.controlAlign = value;\n  }\n  get status() {\n    return this.element.status;\n  }\n  @Input() set status(value) {\n    this.element.status = value;\n  }\n  get controlWidth() {\n    return this.element.controlWidth;\n  }\n  @Input() set controlWidth(value) {\n    this.element.controlWidth = value;\n  }\n  get validate() {\n    return this.element.validate;\n  }\n  @Input() set validate(value: boolean | '') {\n    this.element.validate = !!value;\n  }\n  get responsive() {\n    return this.element.responsive;\n  }\n  @Input() set responsive(value: boolean | '') {\n    this.element.responsive = !!value;\n  }\n  get layout() {\n    return this.element.layout;\n  }\n  @Input() set layout(value) {\n    this.element.layout = value;\n  }\n\n  @Output() layoutChange: EventEmitter<CustomEvent> = new EventEmitter();\n\n  constructor(elementRef: ElementRef) {\n    this.element = elementRef.nativeElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { CdsInternalControlLabel } from '@cds/core/forms';\n\n@Directive({ selector: 'cds-internal-control-label' })\nexport class CdsInternalControlLabelDirective {\n  protected element: CdsInternalControlLabel;\n\n  get disabled() {\n    return this.element.disabled;\n  }\n  @Input() set disabled(value: boolean | '') {\n    this.element.disabled = !!value;\n  }\n  get action() {\n    return this.element.action;\n  }\n  @Input() set action(value) {\n    this.element.action = value;\n  }\n\n  constructor(elementRef: ElementRef) {\n    this.element = elementRef.nativeElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport '@cds/core/forms/register.js';\n\nimport { CdsControlMessageDirective } from './cds-control-message.directive';\nimport { CdsControlActionDirective } from './cds-control-action.directive';\nimport { CdsInternalControlGroupDirective } from './cds-internal-control-group.directive';\nimport { CdsControlDirective } from './cds-control.directive';\nimport { CdsFormGroupDirective } from './cds-form-group.directive';\nimport { CdsInternalControlInlineDirective } from './cds-internal-control-inline.directive';\nimport { CdsInternalControlLabelDirective } from './cds-internal-control-label.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    CdsControlMessageDirective,\n    CdsControlActionDirective,\n    CdsInternalControlGroupDirective,\n    CdsControlDirective,\n    CdsFormGroupDirective,\n    CdsInternalControlInlineDirective,\n    CdsInternalControlLabelDirective,\n  ],\n  exports: [\n    CdsControlMessageDirective,\n    CdsControlActionDirective,\n    CdsInternalControlGroupDirective,\n    CdsControlDirective,\n    CdsFormGroupDirective,\n    CdsInternalControlInlineDirective,\n    CdsInternalControlLabelDirective,\n  ],\n})\nexport class CdsFormsModule {}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './cds-control-message.directive';\nexport * from './cds-control-action.directive';\nexport * from './cds-internal-control-group.directive';\nexport * from './cds-control.directive';\nexport * from './cds-form-group.directive';\nexport * from './cds-internal-control-inline.directive';\nexport * from './cds-internal-control-label.directive';\n\nexport * from './forms.module';\n","/*\n * Public API Surface of cds-angular\n */\n\nexport * from './index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { Directive, Input, EventEmitter, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport '@cds/core/forms/register.js';\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsControlMessageDirective {\n    constructor(elementRef) {\n        this.element = elementRef.nativeElement;\n    }\n    get status() {\n        return this.element.status;\n    }\n    set status(value) {\n        this.element.status = value;\n    }\n    get error() {\n        return this.element.error;\n    }\n    set error(value) {\n        this.element.error = value;\n    }\n}\nCdsControlMessageDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsControlMessageDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsControlMessageDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: CdsControlMessageDirective, selector: \"cds-control-message\", inputs: { status: \"status\", error: \"error\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsControlMessageDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-control-message' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { status: [{\n                type: Input\n            }], error: [{\n                type: Input\n            }] } });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsControlActionDirective {\n    constructor(elementRef) {\n        this.element = elementRef.nativeElement;\n    }\n    get action() {\n        return this.element.action;\n    }\n    set action(value) {\n        this.element.action = value;\n    }\n    get readonly() {\n        return this.element.readonly;\n    }\n    set readonly(value) {\n        this.element.readonly = !!value;\n    }\n    get ariaLabel() {\n        return this.element.ariaLabel;\n    }\n    set ariaLabel(value) {\n        this.element.ariaLabel = value;\n    }\n    get type() {\n        return this.element.type;\n    }\n    set type(value) {\n        this.element.type = value;\n    }\n    get name() {\n        return this.element.name;\n    }\n    set name(value) {\n        this.element.name = value;\n    }\n    get value() {\n        return this.element.value;\n    }\n    set value(value) {\n        this.element.value = value;\n    }\n    get disabled() {\n        return this.element.disabled;\n    }\n    set disabled(value) {\n        this.element.disabled = !!value;\n    }\n}\nCdsControlActionDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsControlActionDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsControlActionDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: CdsControlActionDirective, selector: \"cds-control-action\", inputs: { action: \"action\", readonly: \"readonly\", ariaLabel: \"ariaLabel\", type: \"type\", name: \"name\", value: \"value\", disabled: \"disabled\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsControlActionDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-control-action' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { action: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsInternalControlGroupDirective {\n    constructor(elementRef) {\n        this.element = elementRef.nativeElement;\n    }\n    get status() {\n        return this.element.status;\n    }\n    set status(value) {\n        this.element.status = value;\n    }\n    get layout() {\n        return this.element.layout;\n    }\n    set layout(value) {\n        this.element.layout = value;\n    }\n    get controlAlign() {\n        return this.element.controlAlign;\n    }\n    set controlAlign(value) {\n        this.element.controlAlign = value;\n    }\n    get disabled() {\n        return this.element.disabled;\n    }\n    set disabled(value) {\n        this.element.disabled = !!value;\n    }\n    get controlWidth() {\n        return this.element.controlWidth;\n    }\n    set controlWidth(value) {\n        this.element.controlWidth = value;\n    }\n    get responsive() {\n        return this.element.responsive;\n    }\n    set responsive(value) {\n        this.element.responsive = !!value;\n    }\n}\nCdsInternalControlGroupDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsInternalControlGroupDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsInternalControlGroupDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: CdsInternalControlGroupDirective, selector: \"cds-internal-control-group\", inputs: { status: \"status\", layout: \"layout\", controlAlign: \"controlAlign\", disabled: \"disabled\", controlWidth: \"controlWidth\", responsive: \"responsive\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsInternalControlGroupDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-internal-control-group' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { status: [{\n                type: Input\n            }], layout: [{\n                type: Input\n            }], controlAlign: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], controlWidth: [{\n                type: Input\n            }], responsive: [{\n                type: Input\n            }] } });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsControlDirective {\n    constructor(elementRef) {\n        this.layoutChange = new EventEmitter();\n        this.element = elementRef.nativeElement;\n    }\n    get status() {\n        return this.element.status;\n    }\n    set status(value) {\n        this.element.status = value;\n    }\n    get controlWidth() {\n        return this.element.controlWidth;\n    }\n    set controlWidth(value) {\n        this.element.controlWidth = value;\n    }\n    get validate() {\n        return this.element.validate;\n    }\n    set validate(value) {\n        this.element.validate = !!value;\n    }\n    get responsive() {\n        return this.element.responsive;\n    }\n    set responsive(value) {\n        this.element.responsive = !!value;\n    }\n    get layout() {\n        return this.element.layout;\n    }\n    set layout(value) {\n        this.element.layout = value;\n    }\n}\nCdsControlDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsControlDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsControlDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: CdsControlDirective, selector: \"cds-control\", inputs: { status: \"status\", controlWidth: \"controlWidth\", validate: \"validate\", responsive: \"responsive\", layout: \"layout\" }, outputs: { layoutChange: \"layoutChange\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsControlDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-control' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { status: [{\n                type: Input\n            }], controlWidth: [{\n                type: Input\n            }], validate: [{\n                type: Input\n            }], responsive: [{\n                type: Input\n            }], layout: [{\n                type: Input\n            }], layoutChange: [{\n                type: Output\n            }] } });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsFormGroupDirective {\n    constructor(elementRef) {\n        this.element = elementRef.nativeElement;\n    }\n    get layout() {\n        return this.element.layout;\n    }\n    set layout(value) {\n        this.element.layout = value;\n    }\n    get controlWidth() {\n        return this.element.controlWidth;\n    }\n    set controlWidth(value) {\n        this.element.controlWidth = value;\n    }\n    get responsive() {\n        return this.element.responsive;\n    }\n    set responsive(value) {\n        this.element.responsive = !!value;\n    }\n    get validate() {\n        return this.element.validate;\n    }\n    set validate(value) {\n        this.element.validate = !!value;\n    }\n}\nCdsFormGroupDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsFormGroupDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsFormGroupDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: CdsFormGroupDirective, selector: \"cds-form-group\", inputs: { layout: \"layout\", controlWidth: \"controlWidth\", responsive: \"responsive\", validate: \"validate\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsFormGroupDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-form-group' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { layout: [{\n                type: Input\n            }], controlWidth: [{\n                type: Input\n            }], responsive: [{\n                type: Input\n            }], validate: [{\n                type: Input\n            }] } });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsInternalControlInlineDirective {\n    constructor(elementRef) {\n        this.layoutChange = new EventEmitter();\n        this.element = elementRef.nativeElement;\n    }\n    get controlAlign() {\n        return this.element.controlAlign;\n    }\n    set controlAlign(value) {\n        this.element.controlAlign = value;\n    }\n    get status() {\n        return this.element.status;\n    }\n    set status(value) {\n        this.element.status = value;\n    }\n    get controlWidth() {\n        return this.element.controlWidth;\n    }\n    set controlWidth(value) {\n        this.element.controlWidth = value;\n    }\n    get validate() {\n        return this.element.validate;\n    }\n    set validate(value) {\n        this.element.validate = !!value;\n    }\n    get responsive() {\n        return this.element.responsive;\n    }\n    set responsive(value) {\n        this.element.responsive = !!value;\n    }\n    get layout() {\n        return this.element.layout;\n    }\n    set layout(value) {\n        this.element.layout = value;\n    }\n}\nCdsInternalControlInlineDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsInternalControlInlineDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsInternalControlInlineDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: CdsInternalControlInlineDirective, selector: \"cds-internal-control-inline\", inputs: { controlAlign: \"controlAlign\", status: \"status\", controlWidth: \"controlWidth\", validate: \"validate\", responsive: \"responsive\", layout: \"layout\" }, outputs: { layoutChange: \"layoutChange\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsInternalControlInlineDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-internal-control-inline' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { controlAlign: [{\n                type: Input\n            }], status: [{\n                type: Input\n            }], controlWidth: [{\n                type: Input\n            }], validate: [{\n                type: Input\n            }], responsive: [{\n                type: Input\n            }], layout: [{\n                type: Input\n            }], layoutChange: [{\n                type: Output\n            }] } });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsInternalControlLabelDirective {\n    constructor(elementRef) {\n        this.element = elementRef.nativeElement;\n    }\n    get disabled() {\n        return this.element.disabled;\n    }\n    set disabled(value) {\n        this.element.disabled = !!value;\n    }\n    get action() {\n        return this.element.action;\n    }\n    set action(value) {\n        this.element.action = value;\n    }\n}\nCdsInternalControlLabelDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsInternalControlLabelDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdsInternalControlLabelDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: CdsInternalControlLabelDirective, selector: \"cds-internal-control-label\", inputs: { disabled: \"disabled\", action: \"action\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsInternalControlLabelDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'cds-internal-control-label' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { disabled: [{\n                type: Input\n            }], action: [{\n                type: Input\n            }] } });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nclass CdsFormsModule {\n}\nCdsFormsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsFormsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdsFormsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsFormsModule, declarations: [CdsControlMessageDirective,\n        CdsControlActionDirective,\n        CdsInternalControlGroupDirective,\n        CdsControlDirective,\n        CdsFormGroupDirective,\n        CdsInternalControlInlineDirective,\n        CdsInternalControlLabelDirective], imports: [CommonModule], exports: [CdsControlMessageDirective,\n        CdsControlActionDirective,\n        CdsInternalControlGroupDirective,\n        CdsControlDirective,\n        CdsFormGroupDirective,\n        CdsInternalControlInlineDirective,\n        CdsInternalControlLabelDirective] });\nCdsFormsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsFormsModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: CdsFormsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [\n                        CdsControlMessageDirective,\n                        CdsControlActionDirective,\n                        CdsInternalControlGroupDirective,\n                        CdsControlDirective,\n                        CdsFormGroupDirective,\n                        CdsInternalControlInlineDirective,\n                        CdsInternalControlLabelDirective,\n                    ],\n                    exports: [\n                        CdsControlMessageDirective,\n                        CdsControlActionDirective,\n                        CdsInternalControlGroupDirective,\n                        CdsControlDirective,\n                        CdsFormGroupDirective,\n                        CdsInternalControlInlineDirective,\n                        CdsInternalControlLabelDirective,\n                    ],\n                }]\n        }] });\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * Public API Surface of cds-angular\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdsControlActionDirective, CdsControlDirective, CdsControlMessageDirective, CdsFormGroupDirective, CdsFormsModule, CdsInternalControlGroupDirective, CdsInternalControlInlineDirective, CdsInternalControlLabelDirective };\n","map":{"version":3,"file":"forms.mjs","sources":["../../../projects/cds-angular/forms/cds-control-message.directive.ts","../../../projects/cds-angular/forms/cds-control-action.directive.ts","../../../projects/cds-angular/forms/cds-internal-control-group.directive.ts","../../../projects/cds-angular/forms/cds-control.directive.ts","../../../projects/cds-angular/forms/cds-form-group.directive.ts","../../../projects/cds-angular/forms/cds-internal-control-inline.directive.ts","../../../projects/cds-angular/forms/cds-internal-control-label.directive.ts","../../../projects/cds-angular/forms/forms.module.ts","../../../projects/cds-angular/forms/index.ts","../../../projects/cds-angular/forms/public-api.ts","../../../projects/cds-angular/forms/forms.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { CdsControlMessage } from '@cds/core/forms';\n\n@Directive({ selector: 'cds-control-message' })\nexport class CdsControlMessageDirective {\n  protected element: CdsControlMessage;\n\n  get status() {\n    return this.element.status;\n  }\n  @Input() set status(value) {\n    this.element.status = value;\n  }\n  get error() {\n    return this.element.error;\n  }\n  @Input() set error(value) {\n    this.element.error = value;\n  }\n\n  constructor(elementRef: ElementRef) {\n    this.element = elementRef.nativeElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { CdsControlAction } from '@cds/core/forms';\n\n@Directive({ selector: 'cds-control-action' })\nexport class CdsControlActionDirective {\n  protected element: CdsControlAction;\n\n  get action() {\n    return this.element.action;\n  }\n  @Input() set action(value) {\n    this.element.action = value;\n  }\n  get readonly() {\n    return this.element.readonly;\n  }\n  @Input() set readonly(value: boolean | '') {\n    this.element.readonly = !!value;\n  }\n  get ariaLabel() {\n    return this.element.ariaLabel;\n  }\n  @Input() set ariaLabel(value) {\n    this.element.ariaLabel = value;\n  }\n  get type() {\n    return this.element.type;\n  }\n  @Input() set type(value) {\n    this.element.type = value;\n  }\n  get name() {\n    return this.element.name;\n  }\n  @Input() set name(value) {\n    this.element.name = value;\n  }\n  get value() {\n    return this.element.value;\n  }\n  @Input() set value(value) {\n    this.element.value = value;\n  }\n  get disabled() {\n    return this.element.disabled;\n  }\n  @Input() set disabled(value: boolean | '') {\n    this.element.disabled = !!value;\n  }\n\n  constructor(elementRef: ElementRef) {\n    this.element = elementRef.nativeElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { CdsInternalControlGroup } from '@cds/core/forms';\n\n@Directive({ selector: 'cds-internal-control-group' })\nexport class CdsInternalControlGroupDirective {\n  protected element: CdsInternalControlGroup;\n\n  get status() {\n    return this.element.status;\n  }\n  @Input() set status(value) {\n    this.element.status = value;\n  }\n  get layout() {\n    return this.element.layout;\n  }\n  @Input() set layout(value) {\n    this.element.layout = value;\n  }\n  get controlAlign() {\n    return this.element.controlAlign;\n  }\n  @Input() set controlAlign(value) {\n    this.element.controlAlign = value;\n  }\n  get disabled() {\n    return this.element.disabled;\n  }\n  @Input() set disabled(value: boolean | '') {\n    this.element.disabled = !!value;\n  }\n  get controlWidth() {\n    return this.element.controlWidth;\n  }\n  @Input() set controlWidth(value) {\n    this.element.controlWidth = value;\n  }\n  get responsive() {\n    return this.element.responsive;\n  }\n  @Input() set responsive(value: boolean | '') {\n    this.element.responsive = !!value;\n  }\n\n  constructor(elementRef: ElementRef) {\n    this.element = elementRef.nativeElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Input, Output, EventEmitter } from '@angular/core';\nimport { CdsControl } from '@cds/core/forms';\n\n@Directive({ selector: 'cds-control' })\nexport class CdsControlDirective {\n  protected element: CdsControl;\n\n  get status() {\n    return this.element.status;\n  }\n  @Input() set status(value) {\n    this.element.status = value;\n  }\n  get controlWidth() {\n    return this.element.controlWidth;\n  }\n  @Input() set controlWidth(value) {\n    this.element.controlWidth = value;\n  }\n  get validate() {\n    return this.element.validate;\n  }\n  @Input() set validate(value: boolean | '') {\n    this.element.validate = !!value;\n  }\n  get responsive() {\n    return this.element.responsive;\n  }\n  @Input() set responsive(value: boolean | '') {\n    this.element.responsive = !!value;\n  }\n  get layout() {\n    return this.element.layout;\n  }\n  @Input() set layout(value) {\n    this.element.layout = value;\n  }\n\n  @Output() layoutChange: EventEmitter<CustomEvent> = new EventEmitter();\n\n  constructor(elementRef: ElementRef) {\n    this.element = elementRef.nativeElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { CdsFormGroup } from '@cds/core/forms';\n\n@Directive({ selector: 'cds-form-group' })\nexport class CdsFormGroupDirective {\n  protected element: CdsFormGroup;\n\n  get layout() {\n    return this.element.layout;\n  }\n  @Input() set layout(value) {\n    this.element.layout = value;\n  }\n  get controlWidth() {\n    return this.element.controlWidth;\n  }\n  @Input() set controlWidth(value) {\n    this.element.controlWidth = value;\n  }\n  get responsive() {\n    return this.element.responsive;\n  }\n  @Input() set responsive(value: boolean | '') {\n    this.element.responsive = !!value;\n  }\n  get validate() {\n    return this.element.validate;\n  }\n  @Input() set validate(value: boolean | '') {\n    this.element.validate = !!value;\n  }\n\n  constructor(elementRef: ElementRef) {\n    this.element = elementRef.nativeElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Input, Output, EventEmitter } from '@angular/core';\nimport { CdsInternalControlInline } from '@cds/core/forms';\n\n@Directive({ selector: 'cds-internal-control-inline' })\nexport class CdsInternalControlInlineDirective {\n  protected element: CdsInternalControlInline;\n\n  get controlAlign() {\n    return this.element.controlAlign;\n  }\n  @Input() set controlAlign(value) {\n    this.element.controlAlign = value;\n  }\n  get status() {\n    return this.element.status;\n  }\n  @Input() set status(value) {\n    this.element.status = value;\n  }\n  get controlWidth() {\n    return this.element.controlWidth;\n  }\n  @Input() set controlWidth(value) {\n    this.element.controlWidth = value;\n  }\n  get validate() {\n    return this.element.validate;\n  }\n  @Input() set validate(value: boolean | '') {\n    this.element.validate = !!value;\n  }\n  get responsive() {\n    return this.element.responsive;\n  }\n  @Input() set responsive(value: boolean | '') {\n    this.element.responsive = !!value;\n  }\n  get layout() {\n    return this.element.layout;\n  }\n  @Input() set layout(value) {\n    this.element.layout = value;\n  }\n\n  @Output() layoutChange: EventEmitter<CustomEvent> = new EventEmitter();\n\n  constructor(elementRef: ElementRef) {\n    this.element = elementRef.nativeElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { CdsInternalControlLabel } from '@cds/core/forms';\n\n@Directive({ selector: 'cds-internal-control-label' })\nexport class CdsInternalControlLabelDirective {\n  protected element: CdsInternalControlLabel;\n\n  get disabled() {\n    return this.element.disabled;\n  }\n  @Input() set disabled(value: boolean | '') {\n    this.element.disabled = !!value;\n  }\n  get action() {\n    return this.element.action;\n  }\n  @Input() set action(value) {\n    this.element.action = value;\n  }\n\n  constructor(elementRef: ElementRef) {\n    this.element = elementRef.nativeElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport '@cds/core/forms/register.js';\n\nimport { CdsControlMessageDirective } from './cds-control-message.directive';\nimport { CdsControlActionDirective } from './cds-control-action.directive';\nimport { CdsInternalControlGroupDirective } from './cds-internal-control-group.directive';\nimport { CdsControlDirective } from './cds-control.directive';\nimport { CdsFormGroupDirective } from './cds-form-group.directive';\nimport { CdsInternalControlInlineDirective } from './cds-internal-control-inline.directive';\nimport { CdsInternalControlLabelDirective } from './cds-internal-control-label.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    CdsControlMessageDirective,\n    CdsControlActionDirective,\n    CdsInternalControlGroupDirective,\n    CdsControlDirective,\n    CdsFormGroupDirective,\n    CdsInternalControlInlineDirective,\n    CdsInternalControlLabelDirective,\n  ],\n  exports: [\n    CdsControlMessageDirective,\n    CdsControlActionDirective,\n    CdsInternalControlGroupDirective,\n    CdsControlDirective,\n    CdsFormGroupDirective,\n    CdsInternalControlInlineDirective,\n    CdsInternalControlLabelDirective,\n  ],\n})\nexport class CdsFormsModule {}\n","/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport * from './cds-control-message.directive';\nexport * from './cds-control-action.directive';\nexport * from './cds-internal-control-group.directive';\nexport * from './cds-control.directive';\nexport * from './cds-form-group.directive';\nexport * from './cds-internal-control-inline.directive';\nexport * from './cds-internal-control-label.directive';\n\nexport * from './forms.module';\n","/*\n * Public API Surface of cds-angular\n */\n\nexport * from './index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}}}